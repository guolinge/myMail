{"version":3,"sources":["pages/mail.less","pages/mail.js"],"names":["module","exports","nowTimeStamp","Date","now","App","props","state","date","time","textareValue","title","subtitle","mailUrl","letterCount","bind","sendMail","e","length","Toast","info","this","setState","myHeaders","Headers","append","request","Request","method","mode","body","JSON","stringify","headers","fetch","then","response","json","result","catch","err","getFieldProps","form","className","style","backgroundColor","extra","value","onChange","Item","arrow","minuteStep","use12Hours","width","height","clear","placeholder","ref","el","autoFocusInst","initialValue","rows","count","focus","display","justifyContent","alignItems","marginTop","type","inline","onClick","React","Component","withRouter","createForm"],"mappings":"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","file":"static/js/4.83dda8bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mail.fabfbc2d.less\";","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport './mail.less'\nimport { DatePicker, List, TextareaItem, Toast, InputItem, Button, WhiteSpace } from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport 'antd-mobile/lib/date-picker/style/css';\nimport 'antd-mobile/lib/list/style/css';\nimport 'antd-mobile/lib/textarea-item/style/css';\nimport 'antd-mobile/lib/toast/style/css';\nimport 'antd-mobile/lib/input-item/style/css';\nimport 'antd-mobile/lib/button/style/css';\nimport 'antd-mobile/lib/white-space/style/css';\n\n\n\n\nconst nowTimeStamp = Date.now();\nconst now = new Date(nowTimeStamp);\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: now,\n      time: now,\n      textareValue: '',\n      title: '',\n      subtitle: '',\n      mailUrl: ''\n    }\n    this.letterCount = this.letterCount.bind(this);\n    this.sendMail = this.sendMail.bind(this);\n  }\n  letterCount (e) {\n    if (e.length >= 1000) {\n      Toast.info('描述内容字符数需在1000字以内')\n    }\n    this.setState({ textareValue: e })\n  }\n\n  sendMail () {\n    if (!this.state.mailUrl) {\n      Toast.info('请输入收件邮箱')\n      return\n    }\n    if (!this.state.textareValue) {\n      Toast.info('请输入正文内容')\n      return\n    }\n    let myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/json');\n    let request = new Request('http://111.229.217.134:8081/mail/sendMail', {\n      method: 'POST', \n      mode: 'cors',\n      body:JSON.stringify(this.state),\n      headers:myHeaders\n    });\n    fetch(request)\n      .then(response => response.json())\n      .then(result =>{\n\n      })\n      .catch(err => {\n        Toast.info('请求失败')\n      })\n  }\n\n  componentDidMount() {\n\n  }\n\n  render () {\n    const { getFieldProps } = this.props.form;\n    return (\n      <div>\n      <List className=\"date-picker-list\" style={{ backgroundColor: 'white' }}>\n        <DatePicker\n          mode=\"date\"\n          title=\"Select Date\"\n          extra=\"Optional\"\n          value={this.state.date}\n          onChange={date => this.setState({ date })}\n        >\n          <List.Item arrow=\"horizontal\">选择日期</List.Item>\n        </DatePicker>\n\n        <DatePicker\n          mode=\"time\"\n          minuteStep={2}\n          use12Hours\n          value={this.state.time}\n          onChange={time => this.setState({ time })}\n        >\n          <List.Item arrow=\"horizontal\">选择时间</List.Item>\n        </DatePicker>\n        <div style={{ width: '100%', height: '20px'}}></div>\n        <InputItem\n          {...getFieldProps('autofocus')}\n          clear\n          placeholder=\"你家地址...\"\n          value={this.state.mailUrl}\n          ref={el => this.autoFocusInst = el}\n          onChange={mailUrl => this.setState({ mailUrl })}\n        >邮箱地址</InputItem>\n        <InputItem\n          {...getFieldProps('autofocus')}\n          clear\n          placeholder=\"简单的标题...\"\n          value={this.state.title}\n          ref={el => this.autoFocusInst = el}\n          onChange={title => this.setState({ title })}\n        >邮件标题</InputItem>\n        <InputItem\n          {...getFieldProps('autofocus')}\n          clear\n          placeholder=\"输入主题...\"\n          value={this.state.subtitle}\n          ref={el => this.autoFocusInst = el}\n          onChange={subtitle => this.setState({ subtitle })}\n        >邮件主题</InputItem>\n        <div style={{ width: '100%', height: '20px'}}></div>\n        <List.Item >输入正文内容</List.Item>\n        <TextareaItem\n            {...getFieldProps('count', {\n              initialValue: '',\n            })}\n            value={this.state.textareValue || ''}\n            rows={10}\n            count={1000}\n            focus=\"true\"\n            onChange={this.letterCount}\n            placeholder=\"从这里输入正文内容...\"\n          />\n      </List>\n      <div style={{ \n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '20px'\n       }}>\n      <Button type=\"primary\" inline style={{ width: '180px' }} onClick={this.sendMail}>提交</Button>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(createForm()(App))\n"],"sourceRoot":""}